e.status
class(e.status)
names(hc)
hist(hc$Time)
plot(hc$Time)
time <- hc$Time/(60*60)
str(time)
plot(time)
rm(list = ls())
install.packages("RCurl")
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
?read.delim
View(pew)
class(pew)
tb <- read.csv(
file = "http://stat405.had.co.nz/data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
library(reshape2)
tidy <- melt(pew, "religion")
View(tidy)
names(tidy) <- c("religion", "income", "n")
View(tidy)
View(tb)
tidy_2 <- melt(tb, id= c("iso2", "year"), na.rm = TRUE)
View(tidy_2)
names(tidy)[4] <- "cases"
names(tidy_2)[4] <- "cases"
?melt
tidy_3 <- arrange(tidy_2, iso2, variable, year)
library(plyr)
tidy_3 <- arrange(tidy_2, iso2, variable, year)
View(tidy_3)
?arrange
View(tidy_3)
library(stringr)
tidy_4 <- str_sub(tidy_3$variable, 1 , 1)
?str_sub()
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
tidy_4
tidy_4 <- str_sub(tidy_3$variable, 1 , 6)
str_sub(tidy_3$variable, 1 , 6)
rm(list = ls())
tb <- read.csv(
file = "https://raw.githubusercontent.com/hadley/tidyr/master/vignettes/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
View(tb)
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
tidy_2 <- melt(tb, id= c("iso2", "year"), na.rm = TRUE)
View(tidy_2)
names(tidy_2)[4] <- "cases"
tidy_3 <- arrange(tidy_2, iso2, variable, year)
View(tidy_3)
str_sub(tidy_3$variable, 1 , 1)
str_sub(tidy_3$variable, 2)
ages <- c("04" = "0-4", "514" = "5-14", "014" = "0-14", "1524"="15-24", "2534"="25-34",
"3544"="35-44", "4554"="45-54", "5564"="55-64", "65"="65+", "u"=NA)
ages
ages[str_sub(tidy_3$variable, 2)]
ages
tidy_3$sex <- str_sub(tidy_3$variable, 1 , 1)
tidy_3$age <- factor(ages[str_sub(tidy_3$variable, 2)])
dummy <- ages[str_sub(tidy_3$variable, 2)]
dummy <- data.frame()ages[str_sub(tidy_3$variable, 2)])
dummy <- data.frame(ages[str_sub(tidy_3$variable, 2)])
View(dummy)
tidy_3$variable <- NULL
tidy_3 <- tidy_3[c("iso", "year", "sex", "age", "cases")]
tidy_3 <- tidy_3[,c("iso", "year", "sex", "age", "cases")]
tidy_3$age <- factor(ages[str_sub(tidy_3$variable, 2)], levels = ages)
tb <- read.csv(
file = "https://raw.githubusercontent.com/hadley/tidyr/master/vignettes/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
tidy_2 <- melt(tb, id= c("iso2", "year"), na.rm = TRUE)
names(tidy_2)[4] <- "cases"
tidy_3 <- arrange(tidy_2, iso2, variable, year)
str_sub(tidy_3$variable, 1 , 1)
tidy_3$sex <- str_sub(tidy_3$variable, 1 , 1)
tidy_3$age <- factor(ages[str_sub(tidy_3$variable, 2)], levels = ages)
tidy_3$variable <- NULL
tidy_3 <- tidy_3[c("iso", "year", "sex", "age", "cases")]
tidy_3 <- tidy_3[,c("iso", "year", "sex", "age", "cases")]
tidy_3 <- tidy_3[c("iso2", "year", "sex", "age", "cases")]
weather <- read.delim(
file = "http://stat405.had.co.nz/data/weather.txt",
stringsAsFactors = FALSE
)
View(weather)
raw1 <- melt(raw, id = 1:4, na.rm=T)
raw1 <- melt(weather, id = 1:4, na.rm=T)
View(weather)
View(raw1)
raw1$day <- as.integer(
str_replace(raw1$variable, "d", "")
)
raw1 <- raw1[c("id", "year", "month", "day", "element", "value")]
raw1 <- arrange(raw1, year, month, day, element)
raw1$element <- tolower(raw1$element)
?dcast
tidy <- dcast(raw1, ... ~ element)
View(tidy)
V(g2)
library(igraph)
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=F )
plot(g1)
class(g1)
g2 <- graph( edges=c(1,2, 2,3, 3, 1), n=10 )
plot(g2)
V(g2)
data(cars)
myvar <- sum(cars$speed)
install.packages("RDocumentation")
D
View(tidy_3)
seg.raw <- read.csv("http://goo.gl/qw303p")
seg.df <- seg.raw[ , -7] # remove the known segment assignments
rm(list = ls())
seg.raw <- read.csv("http://goo.gl/qw303p")
seg.df <- seg.raw[ , -7] # remove the known segment assignments
View(seg.df)
summary(seg.df)
attach(mtcars)
aggdata <- aggregate(mtcars, by=list(cyl,vs), FUN = mean, na.rm=TRUE)
Vire(mtcars)
View(mtcars)
View(aggdata)
seg.summ(seg.df, seg.raw$Segment)
seg.summ <- function(data, groups) {
aggregate(data, list(groups), function(x) mean(as.numeric(x)))
}
seg.summ(seg.df, seg.raw$Segment)
c(1,2,3) -c(2,3,2)
sum((c(1,2,3) - c(2,3,2))^2)
sqrt(sum((c(1,2,3) - c(2,3,2))^2))
rbind(c(1,2,3), c(2,3,2))
dist(rbind(c(1,2,3), c(2,3,2)))
d <- dist(seg.df[,c("age", "income", "kids")])
d
as.matrix(d)[1:5, 1:5]
library("cluster", lib.loc="C:/Program Files/R/R-3.3.1/library")
seg.dist <- daisy(seg.df)
as.matrix(seg.dist)[1:5, 1:5]
View(seg.df)
seg.hc <- hclust(seg.dist, method="complete")
View(seg.df)
plot(seg.hc)
plot(cut(as.dendrogram(seg.hc), h=0.5)$lower[[1]])
plot(cut(as.dendrogram(seg.hc), h=0.5)$lower[[2]])
plot(cut(as.dendrogram(seg.hc), h=0.5)$lower[[3]])
plot(cut(as.dendrogram(seg.hc), h=0.5)$lower[[1]])
seg.df[c(101, 107), ]
seg.df[c(278, 294),]
seg.df[c(173, 141),]
cor(cophenetic(seg.hc), seg.dist)
plot(seg.hc)
rect.hclust(seg.hc, k=4, border="red")
seg.hc.segment <- cutree(seg.hc, k = 4)
table(seg.hc.segment)
seg.summ(seg.df, seg.hc.segment)
plot(jitter(as.numeric(seg.df$gender)) ~
jitter(as.numeric(seg.df$subscribe)),
col=seg.hc.segment, yaxt="n", xaxt="n", ylab="", xlab=""
)
axis(1, at=c(1,2), labels=c("Subscribe: No", "Subscribe: Yes"))
axis(2, at=c(1,2), labels=levels(seg.df$gender))
seg.df.num <- seg.df
seg.df.num$gender <- ifelse(seg.df$gender == "Male", 0, 1)
seg.df.num$ownHome <- ifelse(seg.df$ownHome == "ownNo", 0, 1)
seg.df.num$subscribe <- ifelse(seg.df$subscribe == "subNo", 0, 1)
View(seg.df.num)
summary(seg.df.num)
set.seed(96743)
seg.k <- kmeans(seg.df.num, centers = 4)
seg.summ(seg.df, seg.k$cluster)
dir()
getwd()
library(cluster)
seg.raw <- read.csv("http://goo.gl/qw303p")
seg.df <- seg.raw[ , -7] # remove the known segment assignments
seg.df.num <- seg.df
seg.df.num$gender <- ifelse(seg.df$gender == "Male", 0, 1)
seg.df.num$ownHome <- ifelse(seg.df$ownHome == "ownNo", 0, 1)
seg.df.num$subscribe <- ifelse(seg.df$subscribe == "subNo", 0, 1)
set.seed(96743)
seg.k <- kmeans(seg.df.num, centers = 4)
seg.summ(seg.df, seg.k$cluster)
boxplot(seg.df.num$income ~ seg.k$cluster, ylab="Income", xlab="Cluster")
seg.df
clusplot(seg.df, seg.k$cluster, color =TRUE, shade=TRUE,
labels = 4, lines = 0, main="K-means cluster plot")
library(mclust)
install.packages("mclust")
library("mclust", lib.loc="~/R/win-library/3.3")
seg.mc <- Mclust(seg.df.num)
summary(seg.mc)
seg.mc4 <- Mclust(seg.df.num, G=4)
summary(seg.mc4)
BIC(seg.mc, seg.mc4)
seg.summ(seg.df, seg.mc$class)
clusplot(seg.df, seg.mc$class, color=TRUE, shade = TRUE,
labels = 4, lines=0, main="Model-based cluster plot")
seg.df.cut <- seg.df
seg.df.cut$age <- factor(ifelse(seg.df$age < median(seg.df$age), 1, 2))
View(seg.df.cut)
seg.df.cut$income <- factor(ifelse(seg.df$income < median(seg.df$income)))
seg.df.cut$income <- factor(ifelse(seg.df$income < median(seg.df$income), 1, 2))
seg.df.cut$kids <- factor(ifelse(seg.df$kids < median(seg.df$kids), 1, 2))
summary(seg.df.cut)
seg.f <- with(seg.df.cut, cbind(age, gender, incom, kids, ownHome, subscribe)~1)
seg.f
dim(seg.raw)
library(poLCA)
install.packages("poLCA")
library(poLCA)
set.seed(02807)
seg.LCA3 <- poLCA(seg.f, data=seg.df.cut, nclass=3)
seg.f <- with(seg.df.cut, cbind(age, gender, income, kids, ownHome, subscribe)~1)
set.seed(02807)
seg.LCA3 <- poLCA(seg.f, data=seg.df.cut, nclass=3)
seg.LCA4 <- poLCA(seg.f, data = seg.df.cut, nclass = 4)
seg.LCA4$bic
seg.LCA3$bic
seg.summ(seg.df, seg.LCA3$predclass)
table(seg.LCA3$predclass)
clustplot(seg.df, seg.LCA3$predclass, color=TRUE, shade=TRUE,
labels=4, lines=0, main="LCA plot (K=3)")
library(cluster)
library(mclust)
library(poLCA)
clustplot(seg.df, seg.LCA3$predclass, color=TRUE, shade=TRUE,
labels=4, lines=0, main="LCA plot (K=3)")
clusplot(seg.df, seg.LCA3$predclass, color=TRUE, shade=TRUE,
+ labels=4, lines=0, main="LCA plot (K=3)")
clusplot(seg.df, seg.LCA3$predclass, color=TRUE, shade=TRUE,
labels=4, lines=0, main="LCA plot (K=3)")
clusplot(seg.df, seg.LCA3$predclass, color=TRUE, shade=TRUE,
labels=4, lines=0, main="LCA plot (K=3)")
seg.summ(seg.df, seg.LCA4$predclass)
table(seg.LCA4$predclass)
clusplot(seg.df, seg.LCA4$predclass, color=TRUE, shade=TRUE,
labels= 4, lines=0, main="LCA plot(k=4)")
table(seg.LCA3$predclass, seg.LCA4$predclass)
library(mclust)
mapClass(seg.LCA3$predclass, seg.LCA4$predclass)
adjustedRandIndex(seg.LCA3$predclass, seg.LCA4$predclass)
table(seg.raw$Segment, seg.LCA4$predclass)
adjustedRandIndex(seg.raw$Segment, seg.LCA4$predclass)
library(igraph)
library(stringr)
library(sqldf)
library(ggplot2)
library(reshape2)
library("plyr", lib.loc="~/R/win-library/3.3")
user <- dbReadTable(db, "user")
invitation <- dbReadTable(db, "invitation")
setwd("C:/Users/Sebastian/Google Drive/CURSOS/DATA ANALYSIS/Marketing")
setwd("C:/Users/Sebastian/Google Drive/DOCTORADO/PAPERS/G. OBJECTIVE 2 - Real Data (ToS)/Complex contagion paper/ToS_WOM")
setwd("C:/Users/Sebastian/Google Drive/DOCTORADO/PAPERS/G. OBJECTIVE 2 - Real Data (ToS)/Complex contagion paper")
user <- read.csv("users.csv"); user$X <- NULL
user <- read.csv("users.csv"); user$X <- NULL
invitation <- read.csv("invitations.csv"); invitation$X <- NULL
usage <- read.csv("usage.csv"); usage$X <- NULL
setwd("C:/Users/Sebastian/Google Drive/DOCTORADO/PAPERS/G. OBJECTIVE 2 - Real Data (ToS)/Complex contagion paper/ToS_WOM")
user <- read.csv("users.csv"); user$X <- NULL
invitation <- read.csv("invitations.csv"); invitation$X <- NULL
usage <- read.csv("usage.csv"); usage$X <- NULL
View(invitation)
View(usage)
View(user)
network <- graph.data.frame(invitation, directed = TRUE, user)
network_act <- induced_subgraph(network, V(network)[adoption == 1])
summary(network)
summary(network_act)
user$Activation_delay <- user$activation - user$invitation_date
network <- graph.data.frame(invitation[,c(1,2)], directed = TRUE, vertices = user[,1] )
out_degree <- data.frame(
id_1 <- user[,1],
inv_received = degree(network, mode = "in")
)
user_1 <- cbind(user, out_degree[, "inv_received"] )
colnames(user_1)[12] <- "inv_received"
View(user_1)
write.csv(user_1, "users.csv", row.names = FALSE)
user <- read.csv("users.csv"); user$X <- NULL
metrics <- data.frame(
effe_inv_send = degree(network_act, mode="out")
)
metrics$id <- rownames(metrics)
metrics <- metrics[,c(2,1)]
user <- merge(user, metrics)
write.csv(user, "users.csv", row.names = FALSE)
hist(user$effe_inv_send)
plot(user$effe_inv_send)
write.csv(invitation, "invitations.csv", row.names = FALSE)
write.csv(usage, "usage.csv", row.names = FALSE)
net_1 <- as.data.frame(network_act)
library(igraph)
net_1 <- as.data.frame(network_act)
net_1 <- as_data_frame(network_act)
View(net_1)
net_1 <- net_1[c(1,3)]
table(net_1)
net_2 <- table(net_1)
net_2 <- data.frame(table(net_1))
View(net_2)
net_2 <- aggregate(from ~ invitation_date, net_1, sum)
net_2 <- aggregate(from ~ invitation_date, net_1, count)
View(net_2)
net_2 <- data.frame(table(net_1$invitation_date))
View(net_2)
net_2 <- net_1[net_1$invitation_date == unique(net_1$invitation_date), ]
x <- unique(net_1$invitation_date)
summary(network_act)
net_2 <- aggregate(invitation_date~., net_1)
net_2 <- aggregate(invitation_date~., net_1, FUN=count)
View(net_2)
length(unique(net_1$from))
d.f <- data.frame(rating = c("AAA", "A", "A", "AAA",
"BB", "BB", "AAA", "A"))
View(d.f)
i <- 1
by <- d.f$rating
sub.data.frame <- d.f[by == unique(by)[i], ]
sub.data.frame
class(sub.data.frame)
values <- data.frame(value = c("a", "a", "a", "a", "a",
"b", "b", "b",
"c", "c", "c", "c"))
View(values)
nr.of.appearances <- aggregate(x = values,
by = list(unique.values = values$value),
FUN = length)
View(nr.of.appearances)
net_2 <- table(net_1$from,  net_1$invitation_date)
net_2 <- data.frame(table(net_1$from,  net_1$invitation_date))
View(net_2)
net_2 <- data.frame(table(net_1$from +  net_1$invitation_date))
net_2 <- data.frame(table(net_1$from ,  net_1$invitation_date))
net_2 <- count(net_1, c("from", "invitation_date"))
View(net_2)
days_amount <- net_2[,c(1,2)]
days_amount <- data.frame(table(days_amount$from))
View(days_amount)
View(user)
names(days_amount) <- c("id", "day_amount" )
names(days_amount) <- c("id", "days_amount" )
user <- merge(user, days_amount, all.x = TRUE)
user[is.na(user$days_amount)] <- 0
length(is.na(user$days_amount))
length(!(is.na(user$days_amount)))
user[is.na(user$days_amount),] <- 0
user[is.na(user$days_amount),] <- 0
write.csv(user, "user.csv")
net_2$ind_inv <- ifelse(net_2$freq = 1, 1, 0)
net_2$ind_inv <- ifelse(net_2$freq == 1, 1, 0)
net_2$group_inv <- ifelse(net_2$freq > 1, 1, 0)
ind_inv <- data.frame(table(net_2$ind_inv))
View(ind_inv)
ind_inv <- aggregate(net_2, by = list(from, ind_inv), FUN=sum)
ind_inv <- aggregate(net_2, by = c(from, ind_inv), FUN=sum)
ind_inv <- aggregate(net_2, by = list(from, ind_inv), FUN=sum)
ind_inv <- aggregate(net_2, by = list(ind_inv), FUN=sum)
ind_inv <- aggregate(net_2, by = list(from, ind_inv), FUN=sum)
ind_inv <- aggregate(net_2$ind_inv, by = list(inv_group = net_2$ind_inv), FUN=sum)
View(ind_inv)
ind_inv <- aggregate(net_2$ind_inv, by = list(inv_group = net_2$from), FUN=sum)
View(ind_inv)
ind_inv <- aggregate(net_2$ind_inv, by = list(ind_inv = net_2$from), FUN=sum)
group_inv <- aggregate(net_2$group_inv, by = list(group_inv = net_2$from, FUN=sum))
group_inv <- aggregate(net_2$group_inv, by = list(group_inv = net_2$from), FUN=sum)
View(group_inv)
ind_inv <- aggregate(net_2$ind_inv, by = list(id = net_2$from), FUN=sum)
ind_inv <- aggregate(net_2$ind_inv, by = list(id = net_2$from), FUN=sum)
group_inv <- aggregate(net_2$group_inv, by = list(id = net_2$from), FUN=sum)
View(user)
View(user)
user <- dbReadTable(db, "user")
user <- read.csv("users.csv")
View(user)
user_1 <- merge(user, days_amount, all.x = TRUE)
View(user_1)
user_1[is.na(user_1$days_amount),] <- 0
View(user_1)
user_1 <- merge(user, days_amount, all.x = TRUE)
net_2$ind_inv <- ifelse(net_2$freq == 1, 1, 0)
net_2$group_inv <- ifelse(net_2$freq > 1, 1, 0)
ind_inv <- aggregate(net_2$ind_inv, by = list(id = net_2$from), FUN=sum)
group_inv <- aggregate(net_2$group_inv, by = list(id = net_2$from), FUN=sum)
user_1$ind_inv <- merge(user_1, ind_inv, all.x = TRUE)
user_1 <- merge(user, days_amount, all.x = TRUE)
names(ind_inv) <- c("id", "ind_inv")
names(ind_inv) <- c("id", "group_inv")
user_2 <- merge(user_1, ind_inv, all.x = TRUE)
View(user_2)
user_3 <- merge(user_1, group_inv, all.x = TRUE)
View(user_3)
user_3 <- merge(user_2, group_inv, all.x = TRUE)
names(ind_inv) <- c("id", "ind_inv")
user_2 <- merge(user_1, ind_inv, all.x = TRUE)
user_3 <- merge(user_2, group_inv, all.x = TRUE)
names(ind_inv) <- c("id", "group_inv")
names(ind_inv) <- c("id", "ind_inv")
names(group_inv) <- c("id", "group_inv")
user_2 <- merge(user_1, ind_inv, all.x = TRUE)
user_3 <- merge(user_2, group_inv, all.x = TRUE)
write.csv(user_3, "user_1.csv")
install.packages("combinat")
library("combinat", lib.loc="~/R/win-library/3.3")
?combinat
?combinat
??combinat
combn(letters[1:4], 2)
combn(letters[1:3], 2)
combn(letters[1:3], 3)
y <- data.frame(combn(letters[1:3], 3))
y
y <- data.frame(t(combn(letters[1:3], 3)))
View(y)
mydata <- data.frame(v1 = c("5", "3"), v2 = c("3", "1"))
View(mydata)
mydata <- data.frame(v1 = c("5", "3", "5", "8"), v2 = c("3", "1", "7", "3"), v3 = c("2", "4", "1", "7"))
x <- data.frame(combn(mydata), 4)
set.seed(20430)
n     = 1000
k     = 5
p     = 100
mu    = 0
sigma = 1
dat   = rnorm(n*k)
x     = matrix(data=dat, nrow=n, ncol=k)
x=matrix(data=NA, nrow=n, ncol=k)
for(j in 1:k){
for(i in 1:n){
x[i,j] = rnorm(1, mu, sigma)
}
}
View(x)
a <- matrix(c(91:95,1:25), ncol=6)
b <- matrix(NA,ncol=6,nrow=5)
View(a)
View(b)
a <- matrix(1:25, nrow=5)
o <- 91:95
apply(a, 2, function(x) sapply(1:length(x), function(p) {
cs <- cumsum(x * c(rep(0, p-1), rep(1, length(x)-p+1)))
if (max(cs > 14)) {
return(o[min(which(cs > 14))])
} else {
return(NA)
}
}))
y <- combn(mydata[,1], 4)
y
y <- data.frame(combn(mydata[,1], 4))
View(y)
y <- data.frame(t(combn(mydata[,1], 4)))
y <- t(data.frame(combn(mydata[,1], 4)))
y <- t(data.frame(combn(mydata[,1], 4), row.names = "comb1"))
y <- t(data.frame(combn(mydata[,1], 4)),row.names = "comb1")
y <- t(data.frame(combn(mydata[,1], 4)))
for (i in 1:rcol(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = t(data.frame(combn(mydata[,j], ncol(mydata))))
}
}
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = t(data.frame(combn(mydata[,j], ncol(mydata))))
}
}
View(newrow)
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = t(combn(mydata[,j], ncol(mydata)))
}
}
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = sum(mydata[,j])
}
}
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = length(mydata[,j])
}
}
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = t(combn(mydata[,j], ncol(mydata)))
}
}
for (i in 1:nrow(mydata)) {
for (j in 1:ncol(mydata)) {
newrow = (combn(mydata[,j], ncol(mydata)))
}
}
